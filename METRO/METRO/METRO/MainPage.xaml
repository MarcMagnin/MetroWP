<phone:PhoneApplicationPage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mvvmSupport="clr-namespace:METRO.Helpers"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:map="clr-namespace:Microsoft.Phone.Controls.Maps;assembly=Microsoft.Phone.Controls.Maps"
    xmlns:mapCore="clr-namespace:Microsoft.Phone.Controls.Maps.Core;assembly=Microsoft.Phone.Controls.Maps"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:il="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions" 
	xmlns:model="clr-namespace:METRO.Model"
    xmlns:Controls="clr-namespace:METRO.Controls" xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit" 
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:GalaSoft_MvvmLight_Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WP71" 
    x:Class="METRO.MainPage"
    mc:Ignorable="d" d:DesignWidth="480" d:DesignHeight="696"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    shell:SystemTray.IsVisible="True" Background="#FFF1CD20"
	 mvvmSupport:VisualStates.CurrentVisualState="{Binding CurrentVisualState}"
	 DataContext="{Binding Main, Mode=OneWay, Source={StaticResource Locator}}">
	<phone:PhoneApplicationPage.Resources>
		
		<Style x:Key="ListBoxItemStyle1" TargetType="ListBoxItem">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Visibility" Value="Collapsed"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Border x:Name="LayoutRoot" Visibility="Collapsed" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Opacity="0">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TransparentBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="LayoutStates">
									<VisualState x:Name="BeforeUnloaded"/>
									<VisualState x:Name="BeforeLoaded"/>
									<VisualState x:Name="AfterLoaded"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="VisualStateGroup">
									<VisualState x:Name="Show">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LayoutRoot">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
												<DiscreteObjectKeyFrame KeyTime="0:0:0.7">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LayoutRoot">
												<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="WatermarkAutoCompleteBoxStyle" TargetType="Controls:WatermarkAutoCompleteBox">
			<Setter Property="Background" Value="{StaticResource PhoneTextBoxBrush}"/>
			<Setter Property="BorderBrush" Value="{StaticResource PhoneTextBoxBrush}"/>
			<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
			<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}"/>
			<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
			<Setter Property="Foreground" Value="{StaticResource PhoneTextBoxForegroundBrush}"/>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<ContentControl Content="{Binding}" Margin="8,7"/>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Padding" Value="6,0,6,4"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Controls:WatermarkAutoCompleteBox">
						<Grid>
							<Grid.Resources>
        						<SolidColorBrush x:Key="WatermarkBrush" Color="#BF585858"/>	
        					</Grid.Resources>
							<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="VisualStateGroup">
        							<VisualState x:Name="WatermarkState">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Watermark" d:IsOptimized="True"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="NoWatermarkState"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
							<TextBox x:Name="Text" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" InputScope="{TemplateBinding InputScope}" Opacity="{TemplateBinding Opacity}" Padding="{TemplateBinding Padding}" Style="{TemplateBinding TextBoxStyle}"/>
								<ContentControl
	        						x:Name="Watermark"
	        						Opacity="0"
	        						IsTabStop="False"
	        						IsHitTestVisible="False"
	        						Content="{TemplateBinding Watermark}"
	        						Foreground="#FF646464"
	        						Background="{TemplateBinding Background}"
	        						FontFamily="{TemplateBinding FontFamily}"
	        						FontSize="{TemplateBinding FontSize}"
	        						FontStretch="{TemplateBinding FontStretch}"
	        						FontStyle="{TemplateBinding FontStyle}"
	        						FontWeight="{TemplateBinding FontWeight}"
	        						Padding="{TemplateBinding Padding}"
	        						Margin="12,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
							<Popup x:Name="Popup">
								<ListBox x:Name="Selector" BorderBrush="{StaticResource PhoneTextBoxEditBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" IsTabStop="False" ItemTemplate="{TemplateBinding ItemTemplate}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" Opacity="{TemplateBinding Opacity}" Padding="0,8"/>
							</Popup>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="PushpinControlTemplate1" TargetType="map:Pushpin">
			<Canvas Height="60" >
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="VisualStateGroup">
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="Selected">
							<Storyboard>
									<DoubleAnimationUsingKeyFrames  RepeatBehavior="Forever" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="path">
                        						<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        						<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="10">
                        							<EasingDoubleKeyFrame.EasingFunction>
                        								<BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                        							</EasingDoubleKeyFrame.EasingFunction>
                        						</EasingDoubleKeyFrame>
                        					</DoubleAnimationUsingKeyFrames>
                        					<DoubleAnimationUsingKeyFrames  RepeatBehavior="Forever" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="path">
                        						<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        						<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="10">
                        							<EasingDoubleKeyFrame.EasingFunction>
                        								<BackEase EasingMode="EaseOut" Amplitude="0.4"/>
                        							</EasingDoubleKeyFrame.EasingFunction>
                        						</EasingDoubleKeyFrame>
                        					</DoubleAnimationUsingKeyFrames>
                        					<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                        						<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        						<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0"/>
                        					</DoubleAnimationUsingKeyFrames>
                        					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
                        						<DiscreteObjectKeyFrame KeyTime="0">
                        							<DiscreteObjectKeyFrame.Value>
                        								<Visibility>Visible</Visibility>
                        							</DiscreteObjectKeyFrame.Value>
                        						</DiscreteObjectKeyFrame>
                        					</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Path x:Name="path" Data="M7.5,2 C4.4624338,2 2,4.4624338 2,7.5 C2,10.537566 4.4624338,13 7.5,13 C10.537566,13 13,10.537566 13,7.5 C13,4.4624338 10.537566,2 7.5,2 z M7.5,0 C11.642136,0 15,3.3578644 15,7.5 C15,11.642136 11.642136,15 7.5,15 C3.3578644,15 0,11.642136 0,7.5 C0,3.3578644 3.3578644,0 7.5,0 z" Fill="#FF19FF12" 
					Stretch="Fill" Stroke="#7F373737" StrokeThickness="0" UseLayoutRounding="False" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False" Canvas.Top="57" Width="5" Height="5" d:LayoutOverrides="HorizontalAlignment, Margin" Canvas.Left="-1" Visibility="Collapsed" >
					<Path.RenderTransform>
						<CompositeTransform/>
					</Path.RenderTransform>
					<Path.CacheMode>
						<BitmapCache RenderAtScale="10"></BitmapCache>
					</Path.CacheMode>
				</Path>
				<Rectangle CacheMode="BitmapCache"  Fill="#FF7C7C7C" Height="60" Width="1"/>
				<StackPanel CacheMode="BitmapCache"  Orientation="Vertical" Height="60" Canvas.Left="1" Width="479">
					<Grid Background="{TemplateBinding Background}"
						HorizontalAlignment="Left"
						MinHeight="31"
						MinWidth="29">
						<ContentPresenter HorizontalAlignment="Center"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Margin="4"/>
					</Grid>
			  
					<Polygon Fill="{TemplateBinding Background}"
						Points="0,0 29,0 0,29"
						Width="29"
						Height="29"
						HorizontalAlignment="Left"/>
				</StackPanel>
			</Canvas>
 
		</ControlTemplate>
		
		
	</phone:PhoneApplicationPage.Resources>
  


    <phone:PhoneApplicationPage.ApplicationBar>
        <shell:ApplicationBar IsVisible="True" IsMenuEnabled="True" BackgroundColor="{StaticResource PhoneSemitransparentColor}" Opacity="1">
        	<shell:ApplicationBar.MenuItems>
        		<shell:ApplicationBarMenuItem Text="credits"  Click="Credits_Click"/>
        	</shell:ApplicationBar.MenuItems>
            <shell:ApplicationBarIconButton IconUri="/icons/maplayer.png" Text="carte" Click="ApplicationBarChangeTileSource_Click"/>
			<shell:ApplicationBarIconButton IconUri="/icons/itinerary.png" Text="itinéraire" Click="ItineraryClick"/>
			<shell:ApplicationBarIconButton IconUri="/Assets/Images/Location.png" Text="ma position" Click="GoToMyLocationClick"/>
         	<shell:ApplicationBarIconButton IconUri="/icons/appbar.feature.search.rest.png" Text="recherche" Click="ApplicationBarSearchButton_Click"/>
			
			
        </shell:ApplicationBar>
    </phone:PhoneApplicationPage.ApplicationBar>
  


	<Canvas>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStateGroup" ec:ExtendedVisualStateManager.UseFluidLayout="True">
			
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.3">
						<VisualTransition.GeneratedEasingFunction>
							<CircleEase EasingMode="EaseOut"/>
						</VisualTransition.GeneratedEasingFunction>
					</VisualTransition>
				</VisualStateGroup.Transitions>
			
				<VisualState x:Name="NormalState"/>
				<VisualState x:Name="SearchState">
					<Storyboard>
						<DoubleAnimation Duration="0" To="105" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="layoutSearch" d:IsOptimized="True">
							<DoubleAnimation.EasingFunction>
								<CircleEase EasingMode="EaseOut"/>
							</DoubleAnimation.EasingFunction>
						</DoubleAnimation>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="SelectedState">
					<Storyboard>
						<DoubleAnimation Duration="0" To="-80" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="layoutItineraryFlags" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="ItineraryState">
					<Storyboard>
						<DoubleAnimation Duration="0" To="178" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="layoutItinerary" d:IsOptimized="True">
							<DoubleAnimation.EasingFunction>
								<CircleEase EasingMode="EaseOut"/>
							</DoubleAnimation.EasingFunction>
						</DoubleAnimation>
						<DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="VisualStateGroup1" ec:ExtendedVisualStateManager.UseFluidLayout="True">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.6">
						<VisualTransition.GeneratedEasingFunction>
							<CircleEase EasingMode="EaseOut"/>
						</VisualTransition.GeneratedEasingFunction>
					</VisualTransition>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="LineSelectedState">
					<Storyboard>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StationsLayer" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="NoLineSelectedState"/>
			</VisualStateGroup>
			<VisualStateGroup x:Name="VisualStateGroup2">
				<VisualState x:Name="ChangeTileSource">
					<Storyboard>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="textBlock">
							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="412">
								<EasingDoubleKeyFrame.EasingFunction>
									<CubicEase EasingMode="EaseOut"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
							<EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="432"/>
							<EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="900">
								<EasingDoubleKeyFrame.EasingFunction>
									<CircleEase EasingMode="EaseIn"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MainMap">
							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.3"/>
							<EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="0.3"/>
							<EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="1"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="StopChangeTileSource">
					<Storyboard>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="VisualStateGroup3">
				<VisualState x:Name="ShowBackground">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0:0:0.3" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="HideBackground">
					<Storyboard>
						<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="LayersVisibiliy">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0"/>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="ShowMetroStations">
					<Storyboard>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StationsLayer">
							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="HideMetroStations">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="StationsLayer">
							<DiscreteObjectKeyFrame KeyTime="0:0:0.4">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Duration="0:0:0.4" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StationsLayer" d:IsOptimized="True"/>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="ItineraryInfo">
				<VisualState x:Name="ShowItineraryInfo">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="StationsLayer">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItineraryLayer">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItineraryLayer">
							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="HideItineraryInfo"/>
			</VisualStateGroup>
			<VisualStateGroup x:Name="FromFlag">
				<VisualState x:Name="ShowFromPin">
					<Storyboard>
						<DoubleAnimation Duration="0:0:0.7" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="FromPin" d:IsOptimized="True">
							<DoubleAnimation.EasingFunction>
								<BackEase Amplitude="0.4" EasingMode="EaseOut"/>
							</DoubleAnimation.EasingFunction>
						</DoubleAnimation>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FromPin">
							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="HideFromPin"/>
				
			</VisualStateGroup>
			<VisualStateGroup x:Name="ToFlag">
				<VisualState x:Name="HideToPin"/>
				<VisualState x:Name="ShowToPin">
					<Storyboard>
						<DoubleAnimation Duration="0:0:0.7" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ToPin" d:IsOptimized="True">
							<DoubleAnimation.EasingFunction>
								<BackEase Amplitude="0.4" EasingMode="EaseOut"/>
							</DoubleAnimation.EasingFunction>
						</DoubleAnimation>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ToPin">
							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<VisualStateManager.CustomVisualStateManager>
			<ec:ExtendedVisualStateManager/>
		</VisualStateManager.CustomVisualStateManager>

		<map:Map x:Name="MainMap" 
			CopyrightVisibility="Collapsed"
			LogoVisibility="Collapsed"
			ZoomBarVisibility="Collapsed"
			
			Center="48.8578208785607, 2.34737574719038"
			ZoomLevel="15"
			CredentialsProvider="Aj5FwEvcl2VTB3edh1Wp3CDiRxWb2dzio4dhyZvrXdsvyhs4sSkl6mA3_WUFDqMV"
			Height="768" Width="480"
			>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Hold">
					<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding AddressViewModel.MapHoldCommand, Mode=OneWay}" PassEventArgsToCommand="True"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		
			<map:Map.Mode>
				<mapCore:MercatorMode/>
			</map:Map.Mode>

			<map:MapTileLayer x:Name="TileLayer" IsHitTestVisible="False" Opacity="{Binding TileLayerOpacity}" Visibility="{Binding TileLayerVisibility}">
				<map:MapTileLayer.TileSources>
					<Controls:OpenStreetMapTileSource />
				</map:MapTileLayer.TileSources>
			</map:MapTileLayer>
		

			<Controls:OptimizedMapItemsControl x:Name="MetroLinesLayer" ItemsSource="{Binding MetroLines}" IsHitTestVisible="False"  >
				<Controls:OptimizedMapItemsControl.ItemTemplate>
					<DataTemplate>
						<map:MapPolyline x:Name="mapPolyline" Loaded="MapPolyline_Loaded"
							model:MapItem.ItemControlSetter="{Binding}"
							Locations="{Binding Locations}"
							StrokeThickness="15"    
							Stroke="#64FFFFFF" Foreground="{x:Null}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="VisualStateGroup">
									<VisualState x:Name="Selected">
										<Storyboard RepeatBehavior="Forever">
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="mapPolyline">
												<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
												<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
												<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Normal"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<VisualStateManager.CustomVisualStateManager>
								<ec:ExtendedVisualStateManager/>
							</VisualStateManager.CustomVisualStateManager>
						</map:MapPolyline>        	
					</DataTemplate>            
				</Controls:OptimizedMapItemsControl.ItemTemplate>
			</Controls:OptimizedMapItemsControl>


			<map:MapLayer x:Name="StationsLayer"/>
			
			<map:MapItemsControl x:Name="ItineraryLayer" ItemsSource="{Binding ItineraryViewModel.StationsItinerary}" Visibility="Collapsed">
					<map:MapItemsControl.ItemTemplate >
					<DataTemplate>
                    	<map:Pushpin Location="{Binding Location}" PositionOrigin="TopCenter" model:MapItem.ItemControlSetter="{Binding}">
							<map:Pushpin.Template>
								<ControlTemplate>
									<Canvas >
										<TextBlock Text="{Binding Name}" 
											Canvas.Left="-5" 
										
											FontSize="40" FontFamily="Segoe WP Light"/>
										<Ellipse 
											Canvas.Left="-5" Canvas.Top="-5"
											Width="10"
											Height="10" Fill="White" Stroke="Black"/>	
									</Canvas>
								</ControlTemplate>    	
							</map:Pushpin.Template>
                            
						</map:Pushpin>
                    </DataTemplate>
					</map:MapItemsControl.ItemTemplate >
			</map:MapItemsControl>



			<!--	<Controls:OptimizedMapItemsControl x:Name="optimizedMapItemsControl" 
			MinZoomVisibility="13" ItemsSource="{Binding Items}" >
				
				<Controls:OptimizedMapItemsControl.ItemTemplate>
					<DataTemplate>
						<map:Pushpin Location="{Binding Location}" model:MapItem.ItemControlSetter="{Binding}">
							<map:Pushpin.Template>
								<ControlTemplate>
									<Canvas >
										<TextBlock Text="{Binding Name}" 
											Canvas.Left="-5" 
										
											FontSize="40" FontFamily="Segoe WP Light"/>
										<Ellipse 
											Canvas.Left="-5" Canvas.Top="-5"
											Width="10"
											Height="10" Fill="White" Stroke="Black"/>	
									</Canvas>
								</ControlTemplate>    	
							</map:Pushpin.Template>
                            
						</map:Pushpin>
					</DataTemplate>
				</Controls:OptimizedMapItemsControl.ItemTemplate>
			</Controls:OptimizedMapItemsControl>
	-->
			<!--<Controls:OptimizedMapItemsControl ItemsSource="{Binding Items}" IsHitTestVisible="False" Visibility="Collapsed">
				<Controls:OptimizedMapItemsControl.ItemTemplate>
					<DataTemplate>
						<map:Pushpin Location="{Binding Location}" Background="White" Opacity="0.3"/>
					</DataTemplate>
				</Controls:OptimizedMapItemsControl.ItemTemplate>
			</Controls:OptimizedMapItemsControl>-->
			
		
			<!-- User location -->
			<map:Pushpin  Location="{Binding GPSViewModel.UserLocation}" 
				Visibility="{Binding GPSViewModel.UserLocationVisibility}"
				PositionOrigin="Center"
				CacheMode="BitmapCache" IsHitTestVisible="False"
                              >
				<map:Pushpin.Template>
					<ControlTemplate>
						<Grid>
							<Ellipse Stroke="#BC90B3FF" StrokeThickness="3" Height="100" Width="100">
								<Ellipse.Fill>
									<RadialGradientBrush>
										<GradientStop Color="#8C70B0DB" Offset="0.378" />
										<GradientStop Color="Transparent" Offset="1" />
										<GradientStop Color="#54A6CDE8" Offset="0.93" />
									</RadialGradientBrush>
								</Ellipse.Fill>
							</Ellipse>

							<Ellipse x:Name="CenterDot" Height="12" Width="12">
								<Ellipse.Fill>
									<RadialGradientBrush>
										<GradientStop Color="#FF226C93" Offset="1" />
										<GradientStop Color="#FF6BE8E1" Offset="0.372" />
									</RadialGradientBrush>
								</Ellipse.Fill>
							</Ellipse>
						</Grid>
					</ControlTemplate>
				</map:Pushpin.Template>
			</map:Pushpin>
			
			
			<map:Pushpin x:Name="FromPin" 
						PositionOrigin="BottomLeft"
                         CacheMode="BitmapCache"
                         Location="{Binding ItineraryViewModel.FromLocation}"
                         IsHitTestVisible="False"
                         Canvas.ZIndex="1000" RenderTransformOrigin="0.5,0.5" Opacity="0" Background="{x:Null}" 
                         >
				<map:Pushpin.RenderTransform>
					<CompositeTransform TranslateY="-230"/>
				</map:Pushpin.RenderTransform>
         				 <map:Pushpin.Template>
                         	<ControlTemplate>
                         		<Grid Margin="-2,0,0,0">
                         			<Path Data="M912.584,217.3652L912.584,193.3262L914.668,193.3262L914.668,193.2882C918.348,191.8192,921.337,193.0752,924.201,194.6072L924.201,205.3202L924.125,205.3202C921.953,205.3202,916.662,202.8942,914.764,204.5512L914.765,217.3652z M923.836,208.3222L923.836,206.3612C924.295,206.4542,924.705,206.5132,925.042,206.5142C925.067,206.5012,925.092,206.5012,925.117,206.5012L925.117,198.3082C928.328,200.0702,931.49,201.7222,935.416,199.7692C935.416,204.9562,928.885,208.2842,923.836,208.3222" Fill="#FF2BFF00" Height="47.329" Stretch="Fill" Width="43.694" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>           		
								</Grid>                  	
							</ControlTemplate>                  
						 </map:Pushpin.Template>
            </map:Pushpin>
			
			<map:Pushpin x:Name="ToPin" 
						PositionOrigin="BottomLeft"
                         CacheMode="BitmapCache"
						Location="{Binding ItineraryViewModel.ToLocation}"
                         IsHitTestVisible="False"
                         Canvas.ZIndex="1000" Opacity="0" Background="{x:Null}"
                         >
				<map:Pushpin.RenderTransform>
					<CompositeTransform TranslateY="-230"/>
				</map:Pushpin.RenderTransform>
				<map:Pushpin.Template>
                         	<ControlTemplate>
                         		<Grid Margin="-2,0,0,0">
                         			<Path Data="M912.584,217.3652L912.584,193.3262L914.668,193.3262L914.668,193.2882C918.348,191.8192,921.337,193.0752,924.201,194.6072L924.201,205.3202L924.125,205.3202C921.953,205.3202,916.662,202.8942,914.764,204.5512L914.765,217.3652z M923.836,208.3222L923.836,206.3612C924.295,206.4542,924.705,206.5132,925.042,206.5142C925.067,206.5012,925.092,206.5012,925.117,206.5012L925.117,198.3082C928.328,200.0702,931.49,201.7222,935.416,199.7692C935.416,204.9562,928.885,208.2842,923.836,208.3222" Fill="Red" Height="47.329" Stretch="Fill" Width="43.694" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>           		
								</Grid>                  	
							</ControlTemplate>                  
						 </map:Pushpin.Template>
            </map:Pushpin>
			
			
			<!--Address Lookup-->
            <map:Pushpin x:Name="POILookup" 
		
                        Opacity="0"
                         Content="{Binding AddressViewModel.ActionPOIContent}"
                         Location="{Binding AddressViewModel.ActionPOILocation}"
                         IsHitTestVisible="False"
                         Canvas.ZIndex="1000" Margin="0" Padding="0" Template="{StaticResource PushpinControlTemplate1}" 
                         >
            	<i:Interaction.Triggers>
            		<i:EventTrigger EventName="ManipulationCompleted">
            			<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding AddressViewModel.PoiLookUpManipCompletedCommand, Mode=OneWay}"/>
            		</i:EventTrigger>
            		<i:EventTrigger EventName="ManipulationStarted">
            			<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding AddressViewModel.PoiLookUpManipStartedCommand, Mode=OneWay}"/>
            		</i:EventTrigger>
            	</i:Interaction.Triggers>

                <i:Interaction.Behaviors>
                    <il:FluidMoveBehavior>
                        <il:FluidMoveBehavior.EaseY>
                            <CircleEase EasingMode="EaseOut"/>
                        </il:FluidMoveBehavior.EaseY>
                        <il:FluidMoveBehavior.EaseX>
                            <CircleEase EasingMode="EaseOut"/>
                        </il:FluidMoveBehavior.EaseX>
                    </il:FluidMoveBehavior>
                </i:Interaction.Behaviors>
            </map:Pushpin>
		</map:Map>
		<Border  Margin="0" Width="48" Height="223" Canvas.Left="415" Canvas.Top="42" CornerRadius="6" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.345"/>
			<Slider Maximum="1" Value="{Binding TileLayerOpacity, Mode=TwoWay}" BorderBrush="{x:Null}" Canvas.Left="415" Orientation="Vertical" Height="223" Canvas.Top="42" Opacity="0.8"/>
			
		<Border x:Name="border" Height="696" Width="480" Background="{StaticResource PhoneSemitransparentBrush}" Opacity="0" Visibility="Collapsed">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="ManipulationCompleted">
					<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding BackBorderLostFocusCommand, Mode=OneWay}"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</Border>
	
		
		
			<TextBlock x:Name="textBlock"  Text="{Binding TileSourceViewModel.CurrentTileNode.Value.Name}" FontSize="48" Canvas.Top="76" Canvas.Left="-400" 
		RenderTransformOrigin="0.5,0.5" CacheMode="BitmapCache" IsHitTestVisible="False">
			<TextBlock.RenderTransform>
				<CompositeTransform/>
			</TextBlock.RenderTransform>
		</TextBlock>
		<Border x:Name="layoutSearch" CacheMode="BitmapCache" Height="72" Canvas.Top="-105" Width="480" Background="{StaticResource PhoneSemitransparentBrush}" RenderTransformOrigin="0.5,0.5">
			
			<Border.RenderTransform>
				<CompositeTransform TranslateY="0"/>
			</Border.RenderTransform>
			

			<Controls:WatermarkAutoCompleteBox x:Name="MetroAutoComplete" Width="480" 
				
				SelectedItem="{Binding SelectedMetroSearch, Mode=TwoWay}"
				Text="{Binding SelectedMetroSearchText, Mode=TwoWay}"
				FilterMode="None"
				IsTextCompletionEnabled="False"
				Watermark="Station ou adresse..."
				
				MinimumPrefixLength="1"
				 Style="{StaticResource WatermarkAutoCompleteBoxStyle}"  >
								
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectionChanged" >
						<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding SearchCommand, Mode=OneWay}" PassEventArgsToCommand="True"/>
					</i:EventTrigger>
					<i:EventTrigger EventName="KeyUp">
						<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding AddressViewModel.SearchKeyUpCommand, Mode=OneWay}" PassEventArgsToCommand="True"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
				
				
			</Controls:WatermarkAutoCompleteBox >
			<!--<Button Visibility="Collapsed"><Image Source="/icons/appbar.feature.search.rest.png"/></Button>-->
		</Border>
		
		<StackPanel x:Name="layoutStationInfo" Orientation="Horizontal" CacheMode="BitmapCache" Height="70" Canvas.Top="771" Width="480" Background="{StaticResource PhoneSemitransparentBrush}" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" d:IsHidden="True">
			<StackPanel.RenderTransform>
				<CompositeTransform/>
			</StackPanel.RenderTransform>
			<StackPanel Margin="10,0,0,0" >
				<TextBlock Text="{Binding SelectedStation.FullName}" FontSize="24"/>
			</StackPanel>
		</StackPanel>
		<Grid x:Name="layoutItinerary" CacheMode="BitmapCache"  Canvas.Top="-178" Width="480" Background="{StaticResource PhoneSemitransparentBrush}" RenderTransformOrigin="0.5,0.5">
			
			<Grid.RowDefinitions>
				<RowDefinition Height="72"></RowDefinition>
				<RowDefinition Height="72"></RowDefinition>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="90"></ColumnDefinition>
				<ColumnDefinition Width="390"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<Grid.RenderTransform>
				<CompositeTransform TranslateY="0"/>
			</Grid.RenderTransform>
			<TextBlock Text="Départ" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0"></TextBlock>
			<Controls:WatermarkAutoCompleteBox x:Name="FromAutoComplete" 
				SelectedItem="{Binding ItineraryViewModel.FromItem, Mode=TwoWay}"
				Text="{Binding ItineraryViewModel.FromText, Mode=TwoWay}"
				Watermark="Ma position, station, adresse..."
				FilterMode="None"
				IsTextCompletionEnabled="False"
				MinimumPrefixLength="1" Grid.Column="1" Style="{StaticResource WatermarkAutoCompleteBoxStyle}" />
			<TextBlock Text="Arrivée" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" Grid.Row="1"/>
			
            <Controls:WatermarkAutoCompleteBox x:Name="ToAutoComplete" 
				SelectedItem="{Binding ItineraryViewModel.ToItem, Mode=TwoWay}"
				Text="{Binding ItineraryViewModel.ToText, Mode=TwoWay}"
				Watermark="Station ou adresse..."
				FilterMode="None"
				IsTextCompletionEnabled="False"
				MinimumPrefixLength="1" Grid.Row="1" Grid.Column="1" 
				 Style="{StaticResource WatermarkAutoCompleteBoxStyle}" >
								
				<!--<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectionChanged" >
						<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding SearchCommand, Mode=OneWay}" PassEventArgsToCommand="True"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>-->


            </Controls:WatermarkAutoCompleteBox>
			<!--<Button Visibility="Collapsed"><Image Source="/icons/appbar.feature.search.rest.png"/></Button>-->
		</Grid>
		<StackPanel x:Name="layoutItineraryInfo" Orientation="Horizontal" CacheMode="BitmapCache" Height="131" Canvas.Top="771" Width="480" Background="{StaticResource PhoneSemitransparentBrush}" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
			<StackPanel.RenderTransform>
				<CompositeTransform/>
			</StackPanel.RenderTransform>
<!--
				<ListBox ItemsSource="{Binding ItineraryViewModel.Itineraries}" Width="480">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<StackPanel >
								<TextBlock Text="" FontSize="24">
									<Run Text="Prendre le"></Run>
									<Run Text="M" Foreground="{StaticResource PhoneAccentBrush}"></Run>
									<Run Text="{Binding Ligne}" Foreground="{StaticResource PhoneAccentBrush}"></Run>
									<Run Text="{Binding StationDepart}" Foreground="{StaticResource PhoneAccentBrush}"></Run>
								</TextBlock>
							<TextBlock Text="" FontSize="24">
									<Run Text="    Direction"></Run>
									<Run Text="{Binding Direction}" Foreground="{StaticResource PhoneAccentBrush}"></Run>
								</TextBlock>
							<TextBlock Text="" FontSize="24" >
									<Run Text="        Continuer sur"></Run>
									<Run Text="{Binding StationCount}" Foreground="{StaticResource PhoneAccentBrush}"></Run>
									<Run Text="stations"></Run>
								</TextBlock>
							</StackPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<model:Itinerary Direction="Porte des lilas" Ligne="4" StationDepart="Chatelet" StationCount="2"/>
					<model:Itinerary Direction="Porte des lilas" Ligne="4" StationDepart="Chatelet" StationCount="2"/>
				</ListBox>
		-->
		</StackPanel>
		<StackPanel x:Name="layoutItineraryFlags" Width="80" Canvas.Left="480" Canvas.Top="290" RenderTransformOrigin="0.5,0.5">
			<StackPanel.RenderTransform>
				<CompositeTransform/>
			</StackPanel.RenderTransform>
			<Button Style="{StaticResource ToolBarButtonStyle}" toolkit:TiltEffect.IsTiltEnabled="True" Background="{x:Null}" BorderBrush="{x:Null}" Margin="0,0,0,15">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding ItineraryViewModel.SetFromCommand, Mode=OneWay}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<Grid>
					<Path Data="M30.001278,0 C46.559139,0 60,13.440861 60,29.997036 C60,46.559563 46.559139,59.999996 30.001278,59.999996 C13.441713,59.999996 0,46.559563 0,29.997036 C0,13.440861 13.441713,0 30.001278,0 z" Fill="Black" Stretch="Fill" UseLayoutRounding="False" Width="57" Height="57" Opacity="0.5"/>
					<Path Data="M30.001278,4.7553129 C16.066803,4.7553129 4.7548876,16.064686 4.7548876,29.997036 C4.7548876,43.932774 16.066803,55.240879 30.001278,55.240879 C43.934048,55.240879 55.24511,43.932774 55.24511,29.997036 C55.24511,16.064686 43.934048,4.7553129 30.001278,4.7553129 z M30.001278,0 C46.559139,0 60,13.440861 60,29.997036 C60,46.559563 46.559139,59.999996 30.001278,59.999996 C13.441713,59.999996 0,46.559563 0,29.997036 C0,13.440861 13.441713,0 30.001278,0 z" Fill="{StaticResource PhoneBackgroundBrush}" Stretch="Fill" Width="60" UseLayoutRounding="False"/>
					<Path Data="M912.584,217.3652L912.584,193.3262L914.668,193.3262L914.668,193.2882C918.348,191.8192,921.337,193.0752,924.201,194.6072L924.201,205.3202L924.125,205.3202C921.953,205.3202,916.662,202.8942,914.764,204.5512L914.765,217.3652z M923.836,208.3222L923.836,206.3612C924.295,206.4542,924.705,206.5132,925.042,206.5142C925.067,206.5012,925.092,206.5012,925.117,206.5012L925.117,198.3082C928.328,200.0702,931.49,201.7222,935.416,199.7692C935.416,204.9562,928.885,208.2842,923.836,208.3222" Fill="#FF2BFF00" Height="24.731" Stretch="Fill" Width="22.832" HorizontalAlignment="Center" UseLayoutRounding="False"/>
				</Grid>
			</Button>
			<Button Style="{StaticResource ToolBarButtonStyle}" toolkit:TiltEffect.IsTiltEnabled="True" Background="{x:Null}" BorderBrush="{x:Null}" Margin="0">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding ItineraryViewModel.SetToCommand, Mode=OneWay}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<Grid>
					<Path Data="M30.001278,0 C46.559139,0 60,13.440861 60,29.997036 C60,46.559563 46.559139,59.999996 30.001278,59.999996 C13.441713,59.999996 0,46.559563 0,29.997036 C0,13.440861 13.441713,0 30.001278,0 z" Fill="Black" Stretch="Fill" UseLayoutRounding="False" Width="57" Height="57" Margin="1.5" Opacity="0.5"/>
					<Path Data="M30.001278,4.7553129 C16.066803,4.7553129 4.7548876,16.064686 4.7548876,29.997036 C4.7548876,43.932774 16.066803,55.240879 30.001278,55.240879 C43.934048,55.240879 55.24511,43.932774 55.24511,29.997036 C55.24511,16.064686 43.934048,4.7553129 30.001278,4.7553129 z M30.001278,0 C46.559139,0 60,13.440861 60,29.997036 C60,46.559563 46.559139,59.999996 30.001278,59.999996 C13.441713,59.999996 0,46.559563 0,29.997036 C0,13.440861 13.441713,0 30.001278,0 z" Fill="{StaticResource PhoneBackgroundBrush}" Stretch="Fill" Width="60" HorizontalAlignment="Left" UseLayoutRounding="False"/>
					<Path Data="M912.584,217.3652L912.584,193.3262L914.668,193.3262L914.668,193.2882C918.348,191.8192,921.337,193.0752,924.201,194.6072L924.201,205.3202L924.125,205.3202C921.953,205.3202,916.662,202.8942,914.764,204.5512L914.765,217.3652z M923.836,208.3222L923.836,206.3612C924.295,206.4542,924.705,206.5132,925.042,206.5142C925.067,206.5012,925.092,206.5012,925.117,206.5012L925.117,198.3082C928.328,200.0702,931.49,201.7222,935.416,199.7692C935.416,204.9562,928.885,208.2842,923.836,208.3222" Fill="Red" Height="24.731" Stretch="Fill" Width="22.832" HorizontalAlignment="Center" UseLayoutRounding="False"/>
				</Grid>
			</Button>
				
		</StackPanel>


	</Canvas>
</phone:PhoneApplicationPage>